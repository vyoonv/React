{"ast":null,"code":"var _jsxFileName = \"C:\\\\workspace\\\\react\\\\front\\\\react-spring-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport logo from './logo.svg';\nimport './App.css';\nimport { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [message, setMessage] = useState([]);\n  const [message2, setMessage2] = useState(\"\");\n  useEffect(() => {\n    // 요청 -> 서버로 요청 \n    // react(브라우저) -> spring (서버)\n    // http://localhost:3000 -> http://localhost:80\n    // 서버 돌릴 때 스프링부터! -> 리액트 순서대로 \n    fetch(\"/test1\").then(resp => resp.json()).then(data => {\n      setMessage(data);\n    });\n  }, []);\n  const handleClick = () => {\n    fetch(\"/test2\", {\n      method: 'post',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        name: \"홍길동\",\n        age: 15\n      })\n    }).then(res => res.text()).then(data => setMessage2(data));\n  };\n\n  // axios \n  // 브라우저 및 nodejs 환경에서 \n  // 비동기 요청을 쉽게 처리할 수 있게 해주는 Javascript 라이브러리\n  // * 터미널에서 npm / yarn 통해 설치 \n  // $ npm install axios \n  // $ yarn add axios \n\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: [message.map((el, idx) => /*#__PURE__*/_jsxDEV(\"li\", {\n      children: el\n    }, idx, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 33\n    }, this)), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleClick,\n      children: \"fetch\\uB85C \\uC11C\\uBC84 \\uD1B5\\uC2E0\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: message2\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"RO3yV4u6wdHScbyEEvSzgD+BocA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["logo","useEffect","useState","jsxDEV","_jsxDEV","App","_s","message","setMessage","message2","setMessage2","fetch","then","resp","json","data","handleClick","method","headers","body","JSON","stringify","name","age","res","text","children","map","el","idx","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/workspace/react/front/react-spring-app/src/App.js"],"sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport { useEffect, useState } from 'react';\n\nfunction App() {\n\n  const [message, setMessage] = useState([]); \n  const [message2, setMessage2] = useState(\"\"); \n\n  useEffect(() => {\n\n    // 요청 -> 서버로 요청 \n    // react(브라우저) -> spring (서버)\n    // http://localhost:3000 -> http://localhost:80\n    // 서버 돌릴 때 스프링부터! -> 리액트 순서대로 \n    fetch(\"/test1\")\n    .then(resp => resp.json())\n    .then(data => {\n      setMessage(data); \n    }); \n\n  }, [])\n\n  const handleClick = () => {\n    fetch(\"/test2\", {\n      method: 'post', \n      headers: {'Content-Type' : 'application/json'}, \n      body : JSON.stringify({\n        name : \"홍길동\", \n        age : 15\n      })\n    })\n    .then(res => res.text())\n    .then(data => setMessage2(data)); \n  }\n\n  // axios \n  // 브라우저 및 nodejs 환경에서 \n  // 비동기 요청을 쉽게 처리할 수 있게 해주는 Javascript 라이브러리\n  // * 터미널에서 npm / yarn 통해 설치 \n  // $ npm install axios \n  // $ yarn add axios \n\n  return (\n    <ul>\n      {message.map((el, idx) => <li key={idx}>{el}</li>)}\n\n      <hr />\n\n    <button onClick={handleClick}>fetch로 서버 통신</button>\n    <br></br>\n    <h1>{message2}</h1>\n    </ul>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,IAAI,MAAM,YAAY;AAC7B,OAAO,WAAW;AAClB,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAEb,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACO,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAE5CD,SAAS,CAAC,MAAM;IAEd;IACA;IACA;IACA;IACAU,KAAK,CAAC,QAAQ,CAAC,CACdC,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACC,IAAI,CAAC,CAAC,CAAC,CACzBF,IAAI,CAACG,IAAI,IAAI;MACZP,UAAU,CAACO,IAAI,CAAC;IAClB,CAAC,CAAC;EAEJ,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,WAAW,GAAGA,CAAA,KAAM;IACxBL,KAAK,CAAC,QAAQ,EAAE;MACdM,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QAAC,cAAc,EAAG;MAAkB,CAAC;MAC9CC,IAAI,EAAGC,IAAI,CAACC,SAAS,CAAC;QACpBC,IAAI,EAAG,KAAK;QACZC,GAAG,EAAG;MACR,CAAC;IACH,CAAC,CAAC,CACDX,IAAI,CAACY,GAAG,IAAIA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACvBb,IAAI,CAACG,IAAI,IAAIL,WAAW,CAACK,IAAI,CAAC,CAAC;EAClC,CAAC;;EAED;EACA;EACA;EACA;EACA;EACA;;EAEA,oBACEX,OAAA;IAAAsB,QAAA,GACGnB,OAAO,CAACoB,GAAG,CAAC,CAACC,EAAE,EAAEC,GAAG,kBAAKzB,OAAA;MAAAsB,QAAA,EAAeE;IAAE,GAARC,GAAG;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAU,CAAC,CAAC,eAElD7B,OAAA;MAAA0B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAER7B,OAAA;MAAQ8B,OAAO,EAAElB,WAAY;MAAAU,QAAA,EAAC;IAAY;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACnD7B,OAAA;MAAA0B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACT7B,OAAA;MAAAsB,QAAA,EAAKjB;IAAQ;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACf,CAAC;AAET;AAAC3B,EAAA,CAlDQD,GAAG;AAAA8B,EAAA,GAAH9B,GAAG;AAoDZ,eAAeA,GAAG;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}