{"ast":null,"code":"var _jsxFileName = \"C:\\\\workspace\\\\react\\\\my-app\\\\src\\\\exam\\\\Exam6.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// JSX(Javascript Xml) 사용하기 \n\n// 조건문 \nfunction Exam6_1(props) {\n  const isLogin = props.isLogin; // 부모에게 전달 받은 props 중 isLogin 값을 변수에 담음\n\n  /* if(isLogin) {\r\n       return <h1>Welcome back!</h1>\r\n   } else {\r\n       return <h1>Please sign up~!</h1>\r\n   } */\n\n  return isLogin ? /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \"Welcome back!\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 19\n  }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \"Please sign up~!\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 44\n  }, this);\n}\n\n// map 사용법 \n_c = Exam6_1;\nexport function Exam6_2() {\n  // map() : 배열에서 사용하는 js 내장 함수 \n  // -> 배열의 모든 요소에 대해 주어진 함수를 호출 \n  // 결과를 새로운 배열로 반환 \n  const numbers = [1, 2, 3, 4, 5];\n  const listItems = numbers.map(number => /*#__PURE__*/_jsxDEV(\"li\", {\n    children: number + 1\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 46\n  }, this));\n  // [ <li>1</li> ... ]\n  // <li> 태그 안에 각각 1~5까지 값이 들어가 있다.\n\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: listItems\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 13\n  }, this);\n}\n_c2 = Exam6_2;\nexport default Exam6_1; // 기본적으로 내보내는 컴포넌트가 Exam6_1\nvar _c, _c2;\n$RefreshReg$(_c, \"Exam6_1\");\n$RefreshReg$(_c2, \"Exam6_2\");","map":{"version":3,"names":["Exam6_1","props","isLogin","_jsxDEV","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","Exam6_2","numbers","listItems","map","number","_c2","$RefreshReg$"],"sources":["C:/workspace/react/my-app/src/exam/Exam6.js"],"sourcesContent":["// JSX(Javascript Xml) 사용하기 \r\n\r\n// 조건문 \r\nfunction Exam6_1(props) {\r\n\r\n    const isLogin = props.isLogin; // 부모에게 전달 받은 props 중 isLogin 값을 변수에 담음\r\n\r\n   /* if(isLogin) {\r\n        return <h1>Welcome back!</h1>\r\n    } else {\r\n        return <h1>Please sign up~!</h1>\r\n    } */\r\n    \r\n    return (\r\n        isLogin ? <h1>Welcome back!</h1> : <h1>Please sign up~!</h1>\r\n    );\r\n\r\n\r\n}\r\n\r\n// map 사용법 \r\nexport function Exam6_2() {\r\n    // map() : 배열에서 사용하는 js 내장 함수 \r\n    // -> 배열의 모든 요소에 대해 주어진 함수를 호출 \r\n    // 결과를 새로운 배열로 반환 \r\n    const numbers = [1, 2, 3, 4, 5];\r\n    const listItems = numbers.map((number)=> <li>{number+1}</li>); \r\n    // [ <li>1</li> ... ]\r\n    // <li> 태그 안에 각각 1~5까지 값이 들어가 있다.\r\n    \r\n     return <ul>{listItems}</ul>\r\n\r\n\r\n}\r\n\r\nexport default Exam6_1; // 기본적으로 내보내는 컴포넌트가 Exam6_1\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":";;AAAA;;AAEA;AACA,SAASA,OAAOA,CAACC,KAAK,EAAE;EAEpB,MAAMC,OAAO,GAAGD,KAAK,CAACC,OAAO,CAAC,CAAC;;EAEhC;AACH;AACA;AACA;AACA;;EAEI,OACIA,OAAO,gBAAGC,OAAA;IAAAC,QAAA,EAAI;EAAa;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAI,CAAC,gBAAGL,OAAA;IAAAC,QAAA,EAAI;EAAgB;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAI,CAAC;AAIpE;;AAEA;AAAAC,EAAA,GAjBST,OAAO;AAkBhB,OAAO,SAASU,OAAOA,CAAA,EAAG;EACtB;EACA;EACA;EACA,MAAMC,OAAO,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EAC/B,MAAMC,SAAS,GAAGD,OAAO,CAACE,GAAG,CAAEC,MAAM,iBAAIX,OAAA;IAAAC,QAAA,EAAKU,MAAM,GAAC;EAAC;IAAAT,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC,CAAC;EAC7D;EACA;;EAEC,oBAAOL,OAAA;IAAAC,QAAA,EAAKQ;EAAS;IAAAP,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;AAGhC;AAACO,GAAA,GAZeL,OAAO;AAcvB,eAAeV,OAAO,CAAC,CAAC;AAAA,IAAAS,EAAA,EAAAM,GAAA;AAAAC,YAAA,CAAAP,EAAA;AAAAO,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}