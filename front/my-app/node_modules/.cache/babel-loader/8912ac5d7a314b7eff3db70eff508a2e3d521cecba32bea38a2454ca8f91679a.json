{"ast":null,"code":"var _jsxFileName = \"C:\\\\workspace\\\\react\\\\my-app\\\\src\\\\exam\\\\Exam3.js\",\n  _s = $RefreshSig$();\n// State & Props \n\nimport { useState } from \"react\";\n\n// State lifting up : 상태 끌어올리기 \n// 리액트에서는 부모 컴포넌트가 자식 컴포넌트의 상태를 직접 변경할 수 없음 \n// -> 자식에서 발생한 이벤트를 부모에서 처리하도록 하는 상태 끌어올리기 패턴을 이용함 \n\n// 해당 파일에서 컴포넌트 총 3개 존재 \n// Id 컴포넌트 (자식)\n// Pw 컴포넌트 (자식) \n// Exam3 컴포넌트 (부모) - 해당 파일에서 내보낼 기본 컴포넌트 \n\n// Id 컴포넌트 (자식)\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Id = props => {\n  // 부모에게서 전달받은 속성을 props라고 부름\n  //const [id, setId] = useState(\"\"); // 상태(state) 중 'id'를 생성하고 초기값 \"\" 설정   \n\n  const {\n    onChangeId\n  } = props; // props 안에 있는 onChangeId라는 이름의 함수를 이용할 수 있게 됨\n\n  return (\n    /*#__PURE__*/\n    // 컴포넌트 호출시 내보낼 \n    // JSX를 사용한 html 구문 작성부는 무조건 최상위 부모 태그 하나로 감싸져 있어야 함\n    // 최상위 태그 빈 태그여도 상관 없음 \n    _jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"ID : \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: onChangeId\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 13\n      }, this)\n    }, void 0, false)\n  );\n};\n\n// Pw 컴포넌트 (자식)\n_c = Id;\nconst Pw = ({\n  onChangePw\n}) => {\n  // {}를 이용하여 props 안에 있는 값을 바로 꺼내서 쓸수도 있다. \n\n  //const [pw, setPw] = useState(\"\"); // 상태(state) 중 'Pw'를 생성하고 초기값 \"\" 설정   \n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Pw : \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n// Exam3 컴포넌트 (부모)\n_c2 = Pw;\nconst Exam3 = () => {\n  _s();\n  // 자식의 상태를 부모에서 정의 (상태 끌어올리기)\n  const [id, setId] = useState(\"\");\n  const [pw, setPw] = useState(\"\");\n\n  // 자식의 상태를 변경할 수 있는 함수 정의 \n  const onChangeId = e => {\n    setId(e.target.value);\n  };\n  const onChangePw = e => {\n    setPw(e.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Id, {\n      onChangeId: onChangeId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Pw, {\n      onChangePw: onChangePw\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: id.length === 0 || pw.length === 0,\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(Exam3, \"q1NHQv0amsj8/Mc+FUFqRboezwg=\");\n_c3 = Exam3;\nexport default Exam3;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Id\");\n$RefreshReg$(_c2, \"Pw\");\n$RefreshReg$(_c3, \"Exam3\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Id","props","onChangeId","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","_c","Pw","onChangePw","_c2","Exam3","_s","id","setId","pw","setPw","e","target","value","disabled","length","_c3","$RefreshReg$"],"sources":["C:/workspace/react/my-app/src/exam/Exam3.js"],"sourcesContent":["// State & Props \r\n\r\nimport { useState } from \"react\"\r\n\r\n// State lifting up : 상태 끌어올리기 \r\n// 리액트에서는 부모 컴포넌트가 자식 컴포넌트의 상태를 직접 변경할 수 없음 \r\n// -> 자식에서 발생한 이벤트를 부모에서 처리하도록 하는 상태 끌어올리기 패턴을 이용함 \r\n\r\n// 해당 파일에서 컴포넌트 총 3개 존재 \r\n// Id 컴포넌트 (자식)\r\n// Pw 컴포넌트 (자식) \r\n// Exam3 컴포넌트 (부모) - 해당 파일에서 내보낼 기본 컴포넌트 \r\n\r\n// Id 컴포넌트 (자식)\r\nconst Id = (props) => {  // 부모에게서 전달받은 속성을 props라고 부름\r\n    //const [id, setId] = useState(\"\"); // 상태(state) 중 'id'를 생성하고 초기값 \"\" 설정   \r\n\r\n    const {onChangeId} = props; // props 안에 있는 onChangeId라는 이름의 함수를 이용할 수 있게 됨\r\n\r\n    return ( // 컴포넌트 호출시 내보낼 \r\n        // JSX를 사용한 html 구문 작성부는 무조건 최상위 부모 태그 하나로 감싸져 있어야 함\r\n        // 최상위 태그 빈 태그여도 상관 없음 \r\n\r\n        <> \r\n            <div>\r\n                <label>ID : </label>\r\n                <input onChange={onChangeId}/>\r\n            </div>\r\n        </>\r\n    ); \r\n}\r\n\r\n// Pw 컴포넌트 (자식)\r\nconst Pw = ({onChangePw}) => { // {}를 이용하여 props 안에 있는 값을 바로 꺼내서 쓸수도 있다. \r\n\r\n    //const [pw, setPw] = useState(\"\"); // 상태(state) 중 'Pw'를 생성하고 초기값 \"\" 설정   \r\n\r\n    return ( \r\n\r\n        <> \r\n            <div>\r\n                <label>Pw : </label>\r\n                <input />\r\n            </div>\r\n        </>\r\n    ); \r\n}\r\n\r\n// Exam3 컴포넌트 (부모)\r\nconst Exam3 = () => {\r\n\r\n    // 자식의 상태를 부모에서 정의 (상태 끌어올리기)\r\n    const [id, setId] = useState(\"\"); \r\n    const [pw, setPw] = useState(\"\");\r\n\r\n    // 자식의 상태를 변경할 수 있는 함수 정의 \r\n    const onChangeId = (e) => {\r\n        setId(e.target.value); \r\n    }\r\n\r\n    const onChangePw = (e) => {\r\n        setPw(e.target.value); \r\n    }\r\n\r\n    return (\r\n        <>\r\n            {/* 컴포넌트 중 Id를 불러 렌더링함 (Id가 Exam3의 자식이 됨) */}\r\n            <Id onChangeId={onChangeId}/>\r\n            {/* 컴포넌트 중 Pw를 불러 렌더링함 (Pw가 Exam3의 자식이 됨) */}\r\n            <Pw onChangePw={onChangePw}/>\r\n\r\n            <div>\r\n                {/* button의 disabled 속성 : 비활성화 속성 (비활성 true / 활성 false)\r\n                    -> id 와 pw 둘 다 작성되어야 활성화 \r\n                */}\r\n                <button disabled={id.length === 0 || pw.length === 0}>Login</button>\r\n            </div>\r\n        </>\r\n    ); \r\n}\r\n\r\nexport default Exam3; \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}