{"ast":null,"code":"var _jsxFileName = \"C:\\\\workspace\\\\react\\\\my-app\\\\src\\\\contextAPI\\\\ThemeComponent.js\",\n  _s = $RefreshSig$();\n// ThemeComponent.js\n\nimport { useContext } from \"react\";\nimport { ThemeContext } from \"./ThemeContext\";\n\n// css 파일 임포트 \nimport './css/style.css';\n\n// 현재 테마 상태에 따라 스타일을 적용하고 보여줄 컴포넌트 \nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ThemeComponent = () => {\n  _s();\n  // useContext Hook을 사용하여 ThemeContext 값 중 theme 상태값 가져오기 \n  const {\n    theme\n  } = useContext(ThemeContext);\n\n  // 현재 테마에 따라 클래스 이름 설정 \n  const themeStyle = theme == 'light' ? 'light-theme' : 'dark-theme';\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: themeStyle,\n      children: [\"\\uD604\\uC7AC \", theme, \" \\uD14C\\uB9C8 \\uC801\\uC6A9 \\uC911 \\uC785\\uB2C8\\uB2E4.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_s(ThemeComponent, \"LidUGjXGvl6nqLnPI8yC77ot4bM=\");\n_c = ThemeComponent;\nexport default ThemeComponent;\nvar _c;\n$RefreshReg$(_c, \"ThemeComponent\");","map":{"version":3,"names":["useContext","ThemeContext","jsxDEV","_jsxDEV","Fragment","_Fragment","ThemeComponent","_s","theme","themeStyle","children","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/workspace/react/my-app/src/contextAPI/ThemeComponent.js"],"sourcesContent":["// ThemeComponent.js\r\n\r\nimport { useContext } from \"react\";\r\nimport { ThemeContext } from \"./ThemeContext\";\r\n\r\n// css 파일 임포트 \r\nimport './css/style.css'; \r\n\r\n// 현재 테마 상태에 따라 스타일을 적용하고 보여줄 컴포넌트 \r\n\r\nconst ThemeComponent = () => {\r\n\r\n    // useContext Hook을 사용하여 ThemeContext 값 중 theme 상태값 가져오기 \r\n    const { theme } = useContext(ThemeContext); \r\n\r\n    // 현재 테마에 따라 클래스 이름 설정 \r\n    const themeStyle = (theme == 'light' ? 'light-theme' : 'dark-theme');\r\n    \r\n    return (\r\n        <>\r\n            <div className={themeStyle}>\r\n                현재 {theme} 테마 적용 중 입니다. \r\n            </div>\r\n        </>\r\n    ); \r\n}\r\n\r\nexport default ThemeComponent; \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":";;AAAA;;AAEA,SAASA,UAAU,QAAQ,OAAO;AAClC,SAASC,YAAY,QAAQ,gBAAgB;;AAE7C;AACA,OAAO,iBAAiB;;AAExB;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEA,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAEzB;EACA,MAAM;IAAEC;EAAM,CAAC,GAAGR,UAAU,CAACC,YAAY,CAAC;;EAE1C;EACA,MAAMQ,UAAU,GAAID,KAAK,IAAI,OAAO,GAAG,aAAa,GAAG,YAAa;EAEpE,oBACIL,OAAA,CAAAE,SAAA;IAAAK,QAAA,eACIP,OAAA;MAAKQ,SAAS,EAAEF,UAAW;MAAAC,QAAA,GAAC,eACrB,EAACF,KAAK,EAAC,uDACd;IAAA;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK;EAAC,gBACR,CAAC;AAEX,CAAC;AAAAR,EAAA,CAfKD,cAAc;AAAAU,EAAA,GAAdV,cAAc;AAiBpB,eAAeA,cAAc;AAAC,IAAAU,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}